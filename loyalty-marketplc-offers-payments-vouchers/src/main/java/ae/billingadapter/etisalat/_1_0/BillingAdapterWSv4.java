package ae.billingadapter.etisalat._1_0;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2019-11-14T14:39:04.628+04:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "BillingAdapterWSv4",
                  wsdlLocation = "http://au347.etisalat.corp.ae:7003/BillingAdapterV2/BillingAdapterWSv4?wsdl",
                  targetNamespace = "http://www.etisalat.billingadapter.ae/1.0")
public class BillingAdapterWSv4 extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.etisalat.billingadapter.ae/1.0", "BillingAdapterWSv4");
    public final static QName BillingAdapterPort4 = new QName("http://www.etisalat.billingadapter.ae/1.0", "BillingAdapterPort4");
    static {
        URL url = null;
        try {
            url = new URL("http://au347.etisalat.corp.ae:7003/BillingAdapterV2/BillingAdapterWSv4?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BillingAdapterWSv4.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://au347.etisalat.corp.ae:7003/BillingAdapterV2/BillingAdapterWSv4?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public BillingAdapterWSv4(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BillingAdapterWSv4(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BillingAdapterWSv4() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BillingAdapterWSv4(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BillingAdapterWSv4(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BillingAdapterWSv4(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BillingAdapterWS4
     */
    @WebEndpoint(name = "BillingAdapterPort4")
    public BillingAdapterWS4 getBillingAdapterPort4() {
        return super.getPort(BillingAdapterPort4, BillingAdapterWS4.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BillingAdapterWS4
     */
    @WebEndpoint(name = "BillingAdapterPort4")
    public BillingAdapterWS4 getBillingAdapterPort4(WebServiceFeature... features) {
        return super.getPort(BillingAdapterPort4, BillingAdapterWS4.class, features);
    }

}
